#include "functions.h"


void Test_min() {

	vector<int> vec_i{ -1, -6 };//тест с интом
	assert(Min(vec_i) == -6);// что должно вывестись в результате работы- это и есть тестировка
	// если не выводит это то фунция написана не правильно

	vector<float> vec_f{ -2.5, 10.2 };//тест с даблом
	assert(Min(vec_f) == -2.5);// что должно вывестись в результате работы- это и есть тестировка
	// если не выводит это то фунция написана не правильно

	vector<char> vec_ch{ 'A', 'a' }; // тест с чаром
	assert(Min(vec_ch) == 'A');// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно

}

void Test_sort() {

	vector<int> vec_s_i{ 1,2,3,4,5 };//тест с интом
	vector<int> vec_i{ 5,2,3,1,4 };
	Sort(vec_i);
	for (int i = 0; i < vec_s_i.size(); ++i)
		assert(vec_s_i[i] == vec_i[i]);// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно

	vector<float> vec_s_f{ 1.1, 2.2, 3.3, 4.4, 5.5};//тест с даблом
	vector<float> vec_f{5.5, 2.2, 3.3, 1.1, 4.4 };
	Sort(vec_f);
	for (int i = 0; i < vec_s_f.size(); ++i)
		assert(vec_s_f[i] == vec_f[i]);// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно

	vector<char> vec_s_ch{ 'A', 'Z', 'a', 'b', 'c', 'z' };// тест с чаром
	vector<char> vec_ch{ 'b', 'c', 'z', 'a', 'A', 'Z' };
	Sort(vec_ch);
	for (int i = 0; i < vec_s_ch.size(); ++i)
		assert(vec_s_ch[i] == vec_ch[i]);// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно

}

void Test_sum() {

	vector<int> vect_i{ -1, -2, -3, -4, -9, -8, 9, 10, 1 };//тест с интом
	assert(Sum(vect_i) == 20);// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно

	vector<float> vect_f{ 1.2, 2.3, -5.4, 3.4, -10.2, 1.1 };//тест с даблом
	assert(Sum(vect_f) == 8);// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно
	
	vector<char> vect_ch{ '<', '>'};// тест с чаром
	assert(Sum(vect_ch) == 'z');// что должно вывестись в результате работы - это и есть тестировка
	// если не выводит это то фунция написана не правильно


}
